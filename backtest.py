#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import random
import time




def filter_he(henum,willnum :int ):

    bai_he = henum//100
    shi_he = (henum//10)%10
    wei_he = henum%10


    bai = willnum//100
    shi = (willnum//10)%10
    wei = willnum%10



    # print("henum,bai,shi,wei:",henum,bai_he,shi_he,wei_he)
    # print("willnum,bai,shi,wei:",willnum,bai,shi,wei)
    if ((bai_he+shi_he+wei_he)%10) == (bai + shi + wei)%10:
        #print("match")
        return True

    return False
    pass

def check_digit(d1,d2:int):
    if d1//5 == d2//5:
        return True
    return False
    # if d1 < 5 and d2 < 5:
    #     return True
    # else:
    #     if d1 > 4 and d2 >4:
    #         return True
    # return False


def filter_dx(dxnum,willnum:int):

    bai_dx = dxnum//100
    shi_dx = (dxnum//10)%10
    wei_dx = dxnum%10

    bai = willnum//100
    shi = (willnum//10)%10
    wei = willnum%10


    if check_digit(bai_dx,bai):
        if check_digit(shi_dx,shi):
            if check_digit(wei_dx,wei):
                return  True


    return False

def filter_jo(jonum,willnum:int):

    bai_jo = jonum//100
    shi_jo = (jonum//10)%10
    wei_jo = jonum%10

    bai = willnum//100
    shi = (willnum//10)%10
    wei = willnum%10

    if bai_jo%2 != bai %2:
        return False
    if shi_jo % 2 != shi % 2:
        return False
    if wei_jo % 2 != wei % 2:
        return False

    return True
    pass

def get_bet2():

    bet2 = [5,7,9,15,16,17,18,19,25,27,29,35,36,37,38,39,45,47,49,50,51,52,53,54,55,56,57,58,59,61,63,65,67,69,70,71,72,73,74,75,76,77,78,79,81,83,85,87,89,90,91,92,93,94,95,96,97,98,99,105,106,107,108,109,116,118,125,126,127,128,129,136,138,145,146,147,148,149,150,152,154,156,158,160,161,162,163,164,165,166,167,168,169,170,172,174,176,178,180,181,182,183,184,185,186,187,188,189,190,192,194,196,198,205,207,209,215,216,217,218,219,229,235,236,237,238,239,245,247,249,250,251,253,254,258,259,261,263,269,270,271,273,274,278,279,281,283,285,287,289,290,291,292,293,294,295,296,297,298,299,305,306,307,308,309,316,318,325,326,327,328,329,336,338,345,346,347,348,349,350,352,354,356,358,360,361,362,363,364,365,366,367,368,369,370,372,374,376,378,380,381,382,383,384,385,386,387,388,389,390,392,394,396,398,405,407,409,415,416,417,418,419,425,427,429,435,436,437,438,439,445,447,449,450,451,452,453,454,455,456,457,458,459,461,463,465,467,469,470,471,472,473,474,475,476,477,478,479,481,483,485,487,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,512,514,516,518,520,521,523,524,528,529,530,532,534,536,538,540,541,542,543,544,545,546,547,548,549,550,554,560,561,563,564,570,574,580,581,582,583,584,590,592,594,601,603,605,607,609,610,611,612,613,614,615,616,617,618,619,621,623,629,630,631,632,633,634,635,636,637,638,639,641,643,645,647,649,650,651,653,654,661,663,670,671,673,674,681,683,690,691,692,693,694,700,701,702,703,704,705,706,707,708,709,710,712,714,716,718,720,721,723,724,728,729,730,732,734,736,738,740,741,742,743,744,745,746,747,748,749,750,754,760,761,763,764,770,774,780,781,782,783,784,790,792,794,801,803,805,807,809,810,811,812,813,814,815,816,817,818,819,821,823,825,827,829,830,831,832,833,834,835,836,837,838,839,841,843,845,847,849,850,851,852,853,854,861,863,870,871,872,873,874,881,883,890,891,892,893,894,900,901,970,972,974,980,981,982,983,984,990,992,994,000,111,222,333,444]
    bet1 = [2,4,6,8,20,22,24,26,28,40,42,44,46,48,60,62,64,66,68,80,82,84,86,88,113,115,117,119,131,133,135,137,139,151,153,155,157,159,171,173,175,177,179,191,193,195,197,199,200,202,204,206,208,220,224,228,240,242,244,246,248,260,264,268,280,282,284,286,288,311,313,315,317,319,331,335,337,339,351,353,355,357,359,371,373,375,377,379,391,393,395,397,399,400,402,404,406,408,420,422,424,426,428,440,442,446,448,460,462,464,466,468,480,482,484,486,488,511,513,515,517,519,531,533,535,537,539,551,553,559,571,573,579,591,593,595,597,599,600,602,604,606,608,620,624,628,640,642,644,646,648,660,664,668,680,682,684,686,688,711,713,715,717,719,731,733,735,737,739,751,753,759,771,773,779,791,793,795,797,799,800,802,804,806,808,820,822,824,826,828,840,842,844,846,848,860,862,864,866,868,880,882,884,886,911,913,915,917,919,931,933,935,937,939,951,953,955,957,959,971,973,975,977,979,991,993,995,997,1,3,10,11,12,13,14,21,23,30,31,32,33,34,41,43,100,101,102,103,104,110,112,114,120,121,122,123,124,130,132,134,140,141,142,143,144,201,203,210,211,212,213,214,221,223,225,226,227,230,231,232,233,234,241,243,255,256,257,262,265,266,267,272,275,276,277,300,301,302,303,304,310,312,314,320,321,322,324,330,332,334,340,341,342,343,344,401,403,410,412,411,413,414,421,423,430,431,432,433,434,441,443,522,525,526,527,552,556,557,558,562,565,566,567,568,569,572,575,576,577,578,585,586,587,588,589,596,598,622,625,626,627,652,655,656,657,658,659,662,665,667,669,672,675,676,677,678,679,685,687,689,696,698,699,722,725,726,727,752,755,756,757,758,762,765,766,767,768,769,772,775,776,778,785,786,787,788,789,796,798,855,856,857,858,859,865,867,869,875,876,877,878,879,885,887,889,895,896,897,898,899,956,958,965,966,967,968,969,976,978,985,986,987,988,989,996,998,902,903,904,905,906,907,908,909,910,912,914,916,918,920,921,922,923,924,925,926,927,928,929,930,932,934,936,938,940,941,942,943,944,945,946,947,948,949,950,952,954,960,961,962,963,964,555,666,777,888,999]
    if random.randint(0, 1):
        return bet1
    else:
        return  bet2

def get_i_bet(luck_number : int ):
    choose_list = []
    for i in range(1000):

        if filter_dx(luck_number,i):# or filter_he(luck_number,i) or filter_jo(luck_number,i):
            continue
        choose_list.append(i)
    return choose_list
    pass

def check_result(times,luncknum:int,choosse_list:[]):
    print("len:",len(choosse_list))
    for num in choosse_list:
        if num == luncknum:
            #print("恭喜中奖！")
            return True
    return False
    pass

def backtest():
    balance = 5000000.0
    choose_list = []
    print("start")
    luck_number = random.randint(0, 999)
    print("lunck_number:",luck_number)
    get_i_bet(luck_number)
    failover = 0
    times = 1
    for i in range(500000):
        print("准备参加博彩次数,倍数:,总资产：",i,times,balance)
        if failover == 0:
            choose_list = get_bet2()#get_i_bet(luck_number)
        if balance > len(choose_list) *2*times:
            balance = balance - len(choose_list) *2*times
            luck_number = random.randint(0, 999)
            if check_result(times,luck_number,choose_list):
                award = 1900.0*times
                balance = balance + award
                print("中奖！资产增加：",award,"总资产：",balance)
                failover = 0
                times = 1
                pass
            else:
                failover = failover+1
                print("failover:",failover,"倍数:",times,"资产损失：",len(choose_list) *2*times)
                times = times*3

                pass

            #time.sleep(1)
            pass
        else:
            print("子弹不足。。。")
            break




    pass




if __name__ == '__main__':
    backtest()